const startLogger = (inputSelector, inputType = "id", callback) => {
  let inputElement;

  switch (inputType) {
    case "id":
      inputElement = document.querySelector("#" + inputSelector);
      break;
    case "class":
      inputElement = document.querySelector("." + inputSelector);
      break;
    default:
      throw new Error(
        "Incorrect input type. Please enter either an ID or a class."
      );
  }

  if (inputElement) {
    let wordArray = [];

    inputElement.addEventListener("input", (event) => {
      const newText = event.target.value;

      // Check if the last character is a space
      if (newText.endsWith(" ")) {
        const word = newText.trim(); // Get the word without the trailing space
        if (word !== "") {
          wordArray.push(word); // Add the word to the array
          event.target.value = ""; // Clear the input field
        }

        if (typeof callback === "function") {
          callback(wordArray); // Call the callback with the updated array
        }
      }
    });

    inputElement.addEventListener("keydown", (event) => {
      if (event.key === "Enter") {
        const word = event.target.value.trim(); // Get the word without any trailing spaces
        if (word !== "") {
          wordArray.push(word); // Add the word to the array
          event.target.value = ""; // Clear the input field
        }

        if (typeof callback === "function") {
          callback(wordArray); // Call the callback with the updated array
        }

        event.preventDefault(); // Prevent the default form submission behavior
      }
    });

    inputElement.addEventListener("blur", () => {
      const word = inputElement.value.trim(); // Get the word without any trailing spaces
      if (word !== "") {
        wordArray.push(word); // Add the word to the array
        inputElement.value = ""; // Clear the input field
      }

      if (typeof callback === "function") {
        callback(wordArray); // Call the callback with the updated array
      }
    });
  }
};

// Usage
startLogger("lalo", "id", (data) => {
  console.log(data);
});
